file_path <- "hmda_2017_il_all-records_labels.csv"
library(corrplot)
library(ggplot2)
library(tidyr)
library(stringr)
file_path <- "hmda_2017_il_all-records_labels.csv"
library(dplyr)
library(data.table)
library(mice)
library(rstudioapi)
library(naniar)
dirname<- getwd()
source(paste(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)), "utils/utils.r", sep="/"))
source(paste(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)), "utils/model_utils.r", sep="/"))
file_path <- "/Users/omkarpawar/Desktop/Data/IL/hmda_2017_il_all-records_labels.csv"
hmda_il <- fread(file_path)
hmda_il_df <- as.data.frame(hmda_il)
colnames(hmda_il_df)
unique(hmda_il_df$loan_type_name)
unique(hmda_il_df$applicant_ethnicity_name)
unique(hmda_il_df$applicant_ethnicity_name)
unique(hmda_il_df$applicant_race_name_1)
unique(hmda_il_df$applicant_race_name_1)
m <- summarise_at(group_by(hmda_il_df,applicant_race_and_ethnicity),vars(applicant_income_000s),funs(median(.,na.rm=TRUE)))
hmda_il_df$applicant_race_and_ethnicity <- NA
hmda_il_df$co_applicant_race_and_ethnicity <- NA
hmda_il_df$applicant_race_and_ethnicity <- ifelse(hmda_il_df$applicant_ethnicity_name == "Hispanic or Latino",
"Hispanic or Latino", hmda_il_df$applicant_race_name_1)
hmda_il_df$co_applicant_race_and_ethnicity <- ifelse(hmda_il_df$co_applicant_ethnicity_name == "Hispanic or Latino",
"Hispanic or Latino", hmda_il_df$co_applicant_race_name_1)
hmda_il_df$applicant_race_and_ethnicity[hmda_il_df$applicant_race_and_ethnicity == "Information not provided by applicant in mail, Internet, or telephone application"] <- "No Information Provided"
head(hmda_il_df)
m <- summarise_at(group_by(hmda_il_df,applicant_race_and_ethnicity),vars(applicant_income_000s),funs(median(.,na.rm=TRUE)))
ggplot(data = m ,aes (x =  reorder(applicant_race_and_ethnicity,applicant_income_000s),y = applicant_income_000s)) + geom_bar(stat = "identity",fill = "steelblue") +geom_text(aes(label=applicant_income_000s), size=3,nudge_y = 5)+ coord_flip()+labs(title = "Median of applicants income by Race and Ethnicity", y="Median Income",x="Race and Ethnicity")
m <- summarise_at(group_by(hmda_il_df,applicant_race_and_ethnicity),vars(applicant_income_000s),funs(mean(.,na.rm=TRUE)))
ggplot(data = m ,aes (x =  reorder(applicant_race_and_ethnicity,applicant_income_000s),y = applicant_income_000s)) + geom_bar(stat = "identity",fill = "steelblue") +geom_text(aes(label=applicant_income_000s), size=3,nudge_y = 5)+ coord_flip()+labs(title = "Median of applicants income by Race and Ethnicity", y="Median Income",x="Race and Ethnicity")
p <- ggplot(group_by(hmda_il_df,applicant_race_and_ethnicity), aes(x=applicant_race_and_ethnicity, y=applicant_income_000s)) +
geom_boxplot() + labs(title = "Applicants Income According to Race And Ethnicity" , x = "Applicant Race and Ethnicity" , y = "Income distribution in thousands")
p +coord_flip()
hmda_origination_status_df <- hmda_il_df[hmda_il_df$action_taken == "1", ]
summary(hmda_origination_status_df$applicant_income_000s)
m <- summarise_at(group_by(hmda_origination_status_df,applicant_race_and_ethnicity),vars(applicant_income_000s),funs(median(.,na.rm=TRUE)))
ggplot(data = m ,aes (x =  reorder(applicant_race_and_ethnicity,applicant_income_000s),y = applicant_income_000s)) + geom_bar(stat = "identity",fill = "steelblue") +geom_text(aes(label=applicant_income_000s), size=3 , nudge_y = 5)+ coord_flip()+labs(title = "Median of applicants income by Race and Ethnicity", y="Median Income",x="Race and Ethnicity")
unique(hmda_il_df$action_taken_name)
tbl <- with(hmda_il_df, table(action_taken_name,applicant_race_and_ethnicity))
ggplot(as.data.frame(tbl), aes(factor(applicant_race_and_ethnicity), Freq, fill = action_taken_name)) +
geom_col(position = 'dodge') + labs(title = "Proportion of loans denied by financial Institutions",x = "Race and Ethnicity" , y = "Number of applicants") + coord_flip()
ggplot(as.data.frame(tbl), aes(factor(applicant_race_and_ethnicity), Freq, fill = action_taken_name)) +
geom_col(position = 'dodge') + labs(title = "Proportion of loans denied by financial Institutions",x = "Race and Ethnicity" , y = "Number of applicants")
m<-sapply(hmda_il_df, function(x) sum(is.na(x)))
temp<-c()
for (i in 1:length(m)){
if(m[i]>0){
temp<-c(temp,m[i])
}
}
missing <- data.frame(temp)
missing$percent <- (missing$temp / length(hmda_il_df$as_of_year))*100
missing
unique(hmda_il_df$action_taken_name)
unique(hmda_il_df$action_taken)
hmda_il_df$loan_granted <- ifelse(hmda_il_df$action_taken == 1 | hmda_il_df$action_taken == 6, 1, 0)
colnames(hmda_il_df)
drop<- c ("applicant_race_2",
"applicant_race_3",
"applicant_race_4",
"applicant_race_5",
"co_applicant_race_2",
"co_applicant_race_3",
"co_applicant_race_4",
"co_applicant_race_5",
"denial_reason_1",
"denial_reason_2",
"denial_reason_3",
"edit_status_name",
"edit_status",
"rate_spread",
"sequence_number",
"application_date_indicator",
"as_of_year", # Does not provide extra information which can be used
"respondent_id", # Does not provide extra information which can be used
"agency_abbr", # Does not provide extra information which can be used
"agency_name", # Does not provide extra information which can be used
"loan_type_name", # We are only dealing with conventional loans.
"loan_type",
"state_abbr",# Not needed as data is of same state
"state_code", # Not needed as data is of same state
"owner_occupancy_name", # Redundant column. Encoded values present
"msamd_name", # Redundant column. Encoded values present
"state_name", # Redundant column. Encoded values present
"applicant_sex_name", # Redundant column. Encoded values present
"hoepa_status_name", # Redundant column. Encoded values present
"lien_status_name", # Redundant column. Encoded values present
"county_name", # Redundant column. Encoded values present
"preapproval_name", # Redundant column. Encoded values present
"property_type_name", # Redundant column. Encoded values present
"action_taken_name", # Redundant column. Encoded values present
"loan_purpose_name", # Redundant column. Encoded values present
"purchaser_type_name", # Redundant column. Encoded values present
"applicant_ethnicity_name", # Redundant column. Encoded values present
"co_applicant_ethnicity_name", # Redundant column. Encoded values present
"co_applicant_sex_name" ) # Redundant column. Encoded values present
hmda_il_df<-hmda_il_df[ , !(names(hmda_il_df) %in% drop)]
hmda_il_df$loan_granted <- ifelse(hmda_il_df$action_taken == 1 | hmda_il_df$action_taken == 6, 1, 0)
colnames(hmda_il_df)
feature_importances(dataf = hmda_il_df , number_of_top_features = 20)
#Change file path here. Data can be downloaded from HMDA website.
file_path <- "/Users/omkarpawar/Desktop/Data/IL/hmda_2017_il_all-records_labels.csv"
library(corrplot)
library(ggplot2)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
library(mice)
library(rstudioapi)
library(naniar)
dirname<- getwd()
source(paste(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)), "utils/utils.r", sep="/"))
source(paste(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)), "utils/model_utils.r", sep="/"))
hmda_il <- fread(file_path)
hmda_il_df <- as.data.frame(hmda_il)
colnames(hmda_il_df)
dim(hmda_il_df)
head(hmda_il_df,10)
glimpse(hmda_il_df)
sapply(hmda_il_df,function(x) sum(is.na(x)))
sapply(hmda_il_df,function(x) sum(x==""))
sapply(hmda_il_df,function(x) sum(x=="?"))
sapply(hmda_il_df,function(x) sum(is.null(x)))
unique(hmda_il_df$loan_type_name)
graph_loan_types(hmda_il_df)
unique(hmda_il_df$applicant_ethnicity_name)
unique(hmda_il_df$applicant_race_1)
unique(hmda_il_df$applicant_race_name_1)
hmda_il_df$applicant_race_and_ethnicity <- NA
hmda_il_df$co_applicant_race_and_ethnicity <- NA
hmda_il_df$applicant_race_and_ethnicity <- ifelse(hmda_il_df$applicant_ethnicity_name == "Hispanic or Latino",
"Hispanic or Latino", hmda_il_df$applicant_race_name_1)
hmda_il_df$co_applicant_race_and_ethnicity <- ifelse(hmda_il_df$co_applicant_ethnicity_name == "Hispanic or Latino",
"Hispanic or Latino", hmda_il_df$co_applicant_race_name_1)
hmda_il_df$applicant_race_and_ethnicity[hmda_il_df$applicant_race_and_ethnicity == "Information not provided by applicant in mail, Internet, or telephone application"] <- "No Information Provided"
head(hmda_il_df)
count_racename <- as.data.frame(table(hmda_il_df$applicant_race_and_ethnicity))
colnames(count_racename)<-c("Race_and_Ethnicity","Count")
p<-ggplot(data=count_racename, aes(x=reorder(Race_and_Ethnicity,-Count), y=Count)) + geom_bar(stat="identity",fill="steelblue")+geom_text(aes(label=Count), size=2.5)
p + coord_flip() +labs(title = "Distribution of applicants by Race and Ethnicity", y="Number of Applicants",x="Race and Ethnicity")
summary(hmda_il_df$applicant_income_000s)
ggplot(data = hmda_il_df,aes(x = applicant_income_000s)) + geom_boxplot()
temp<-as.data.frame(hmda_il_df$applicant_income_000s[hmda_il_df$applicant_income_000s<500])
ggplot(data = temp, aes(x=hmda_il_df$applicant_income_000s[hmda_il_df$applicant_income_000s < 500])) +geom_histogram(fill = "steelblue") + labs(title = "Applicant for income below 500K" , x = "Income in thousands",y="Count")
no_of_NAs <- sum(is.na(temp))
income_below_500<-length(hmda_il_df$applicant_income_000s[hmda_il_df$applicant_income_000s<500])
total_applicants<-length(hmda_il_df$applicant_income_000s)
((income_below_500 - no_of_NAs ) / total_applicants ) *100
writeLines("Percent of missing values")
sum(is.na(hmda_il_df$applicant_income_000s)) / length(hmda_il_df$applicant_income_000s)
m <- summarise_at(group_by(hmda_il_df,applicant_race_and_ethnicity),vars(applicant_income_000s),funs(mean(.,na.rm=TRUE)))
ggplot(data = m ,aes (x =  reorder(applicant_race_and_ethnicity,applicant_income_000s),y = applicant_income_000s)) + geom_bar(stat = "identity",fill = "steelblue") +geom_text(aes(label=applicant_income_000s), size=3,nudge_y = 5)+ coord_flip()+labs(title = "Median of applicants income by Race and Ethnicity", y="Median Income",x="Race and Ethnicity")
p <- ggplot(group_by(hmda_il_df,applicant_race_and_ethnicity), aes(x=applicant_race_and_ethnicity, y=applicant_income_000s)) +
geom_boxplot() + labs(title = "Applicants Income According to Race And Ethnicity" , x = "Applicant Race and Ethnicity" , y = "Income distribution in thousands")
p +coord_flip()
hmda_origination_status_df <- hmda_il_df[hmda_il_df$action_taken == "1", ]
summary(hmda_origination_status_df$applicant_income_000s)
p <- ggplot(group_by(hmda_origination_status_df,applicant_race_and_ethnicity), aes(x=applicant_race_and_ethnicity, y=applicant_income_000s)) +
geom_boxplot() + labs(title = "Approved Loan Applicant's Income Distribution" , x = "Applicant Race and Ethnicity" , y = "Income distribution in thousands")
p +coord_flip()
m <- summarise_at(group_by(hmda_origination_status_df,applicant_race_and_ethnicity),vars(applicant_income_000s),funs(median(.,na.rm=TRUE)))
ggplot(data = m ,aes (x =  reorder(applicant_race_and_ethnicity,applicant_income_000s),y = applicant_income_000s)) + geom_bar(stat = "identity",fill = "steelblue") +geom_text(aes(label=applicant_income_000s), size=3 , nudge_y = 5)+ coord_flip()+labs(title = "Median of applicants income by Race and Ethnicity", y="Median Income",x="Race and Ethnicity")
temp<-as.data.frame(hmda_origination_status_df$applicant_income_000s[hmda_origination_status_df$applicant_income_000s<500])
ggplot(data = temp, aes(x=hmda_origination_status_df$applicant_income_000s[hmda_origination_status_df$applicant_income_000s < 500])) +geom_histogram(fill = "steelblue") + labs(title = "Applicant with loan approved and income below 500K" , x = "Income in thousands",y="Count")
unique(hmda_il_df$action_taken_name)
unique(hmda_il_df$action_taken)
hmda_il_df$Decision <- NA
hmda_il_df$Decision <- ifelse(hmda_il_df$action_taken_name == "Application denied by financial institution" | hmda_il_df$action_taken_name == "Preapproval request denied by financial institution" , "Denied" ,  ifelse(hmda_il_df$action_taken_name == "Loan originated" | hmda_il_df$action_taken_name == "Application approved but not accepted" ,  "Approved" , "Paperwork Issues"))
tbl <- with(hmda_il_df, table(Decision,applicant_race_and_ethnicity))
ggplot(as.data.frame(tbl), aes(factor(applicant_race_and_ethnicity), Freq, fill = Decision)) +
geom_col(position = 'dodge') + labs(title = "Proportion of loans denied by financial Institutions",x = "Race and Ethnicity" , y = "Number of applicants") + coord_flip()
tbl <- with(hmda_il_df, table(action_taken_name,applicant_race_and_ethnicity))
ggplot(as.data.frame(tbl), aes(factor(applicant_race_and_ethnicity), Freq, fill = action_taken_name)) +
geom_col(position = 'dodge') + labs(title = "Proportion of loans denied by financial Institutions",x = "Race and Ethnicity" , y = "Number of applicants")
mortgage_status_by_race_and_ethnicity <- hmda_il_df %>% group_by(action_taken_name, applicant_race_and_ethnicity) %>%
summarise(ActionCount = n()) %>%
arrange(desc(ActionCount))
mortgage_by_race_and_ethnicity = hmda_il_df %>% group_by(applicant_race_and_ethnicity) %>%
summarise(EthnicityCount = n()) %>%
arrange(desc(EthnicityCount))
mortgage_status_aggregated_by_race_and_ethnicity  = inner_join(mortgage_status_by_race_and_ethnicity, mortgage_by_race_and_ethnicity) %>% mutate(percentage = (ActionCount / EthnicityCount) * 100)
ggplot(mortgage_status_aggregated_by_race_and_ethnicity, aes(x = reorder(action_taken_name, percentage),
y = percentage)) +
geom_bar(stat='identity', fill ="#00AFBB") +
facet_wrap(~ applicant_race_and_ethnicity) +
geom_text(aes(x = action_taken_name, y = 1, label = paste0("(",round(percentage),"%)",sep="")),
hjust=0, vjust=.5, size = 2.5, colour = 'black',
fontface = 'bold') +
labs(x = 'Action', y = 'Percent Count Of Action Taken', title = 'Actions for Loan Application by Race') +
coord_flip() +
theme_bw()
library(moments)
skew <- paste("Skewness:",skewness(hmda_il_df$loan_amount_000s,na.rm = TRUE))
ggplot(data = hmda_il_df , aes(x = loan_amount_000s)) + geom_histogram(fill = "steelblue") + labs(title = "Loan amount distribution" , x = "Loan amount in thousands" , y = "Count")+ annotate("text", x = 100000, y = 300000, size = 3.2,label = skew)
ggplot(data = hmda_il_df , aes(x = loan_amount_000s)) + geom_boxplot()+ labs(title = "Loan amount distribution" , x = "Loan amount in thousands" )
#install.packages("moments")
library(moments)
skewness(hmda_il_df$loan_amount_000s,na.rm = TRUE)
skew <- paste("Skewness:",skewness(log(hmda_il_df$loan_amount_000s),na.rm = TRUE))
ggplot(data = hmda_il_df , aes(x = log(loan_amount_000s))) + geom_histogram(fill = "steelblue") + labs(title = "Log transformed distribution for Loan amount" , x = "log(Loan Amount)", y = 'Count')+ annotate("text", x = 8, y = 100000, size = 3.2,label = skew)
skewness(log(hmda_il_df$loan_amount_000s),na.rm = TRUE)
skew <- paste("Skewness:",skewness(hmda_il_df$applicant_income_000s,na.rm = TRUE))
ggplot(data = hmda_il_df , aes(x = applicant_income_000s)) + geom_histogram(fill = "steelblue") + labs(title = "Applicant Income distribution" , x = "Applicant Income in thousands" , y = "Count") + annotate("text", x = 100000, y = 90000, size = 3.2,label = skew)
skew <- paste("Skewness:",skewness(log(hmda_il_df$applicant_income_000s),na.rm=TRUE))
ggplot(data = hmda_il_df , aes(x = log(applicant_income_000s))) + geom_histogram(fill = "steelblue") + labs(title = "Log transformed distribution for Applicant Income" , x = "log(Applicant Income)", y = 'Count') +annotate("text", x = 10, y = 90000, size = 3.2,label = skew)
m<-sapply(hmda_il_df, function(x) sum(is.na(x)))
temp<-c()
for (i in 1:length(m)){
if(m[i]>0){
temp<-c(temp,m[i])
}
}
missing <- data.frame(temp)
missing$percent <- (missing$temp / length(hmda_il_df$as_of_year))*100
missing
drop<- c ("applicant_race_2",
"applicant_race_3",
"applicant_race_4",
"applicant_race_5",
"co_applicant_race_2",
"co_applicant_race_3",
"co_applicant_race_4",
"co_applicant_race_5",
"denial_reason_1",
"denial_reason_2",
"denial_reason_3",
"edit_status_name",
"edit_status",
"rate_spread",
"sequence_number",
"application_date_indicator",
"as_of_year", # Does not provide extra information which can be used
"respondent_id", # Does not provide extra information which can be used
"agency_abbr", # Does not provide extra information which can be used
"agency_name", # Does not provide extra information which can be used
"loan_type_name", # We are only dealing with conventional loans.
"loan_type",
"state_abbr",# Not needed as data is of same state
"state_code", # Not needed as data is of same state
"owner_occupancy_name", # Redundant column. Encoded values present
"msamd_name", # Redundant column. Encoded values present
"state_name", # Redundant column. Encoded values present
"applicant_sex_name", # Redundant column. Encoded values present
"hoepa_status_name", # Redundant column. Encoded values present
"lien_status_name", # Redundant column. Encoded values present
"county_name", # Redundant column. Encoded values present
"preapproval_name", # Redundant column. Encoded values present
"property_type_name", # Redundant column. Encoded values present
"action_taken_name", # Redundant column. Encoded values present
"loan_purpose_name", # Redundant column. Encoded values present
"purchaser_type_name", # Redundant column. Encoded values present
"applicant_ethnicity_name", # Redundant column. Encoded values present
"co_applicant_ethnicity_name", # Redundant column. Encoded values present
"co_applicant_sex_name" ) # Redundant column. Encoded values present
hmda_il_df<-hmda_il_df[ , !(names(hmda_il_df) %in% drop)]
dim(hmda_il_df)
hmda_il_df$loan_granted <- ifelse(hmda_il_df$action_taken == 1 | hmda_il_df$action_taken == 6, 1, 0)
colnames(hmda_il_df)
feature_importances(dataf = hmda_il_df , number_of_top_features = 20)
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",          "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#Change file path here. Data can be downloaded from HMDA website.
file_path <- "/Users/omkarpawar/Desktop/Data/IL/hmda_2017_il_all-records_labels.csv"
dirname<- getwd()
source(paste(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)), "utils/utils.r", sep="/"))
paste(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)
getwd()
library(corrplot)
library(ggplot2)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
library(mice)
library(rstudioapi)
library(naniar)
dirname<- getwd()
getwd()
source(paste(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)), "utils/utils.r", sep="/"))
rstudioapi::getActiveDocumentContext()$path
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(dirname(rstudioapi::getActiveDocumentContext()$path))
source(paste(dirname(dirname(dirname(rstudioapi::getActiveDocumentContext()$path))), "utils/utils.r", sep="/"))
source(paste(dirname(dirname(dirname(rstudioapi::getActiveDocumentContext()$path))), "utils/model_utils.r", sep="/"))
